@using Enities.ViweModel.Module
@model CreateModuleVM

<div class="bg-white m-5 w-80 border border-2 shadow rounded">
    <div class="bg-white m-5" id="addnewmodule">
        <div class="bg-white m-5 d-flex flex-column justify-content-between">
            <div class="mt-3">
                <h2>Curriculum</h2>
            </div>

            <div class="m-2">
                <p>
                    Start putting together your course by creating sections, lectures, and practice activities
                    (quizzes, coding exercises, and assignments). Use your course outline to structure your content
                    and label your sections and lectures clearly. If you’re intending to offer your course for free,
                    the total length of video content must be less than 2 hours.
                </p>
            </div>
        </div>
        <hr class="border-bottom border-2 border-dark" />

      @*   <div class="border border-2 m-5 d-flex flex-column justify-content-between" style="background:#f7f9fa">
            <form id="addmoduleform">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="">
                    <h5 class="mt-2">Module Title</h5>
                    <input type="text" asp-for="Title" class="form-control mt-2 w-75" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="mt-2">
                    <h5 class="mt-2">What will students be able to do at the end of this section?</h5>
                    <input type="text" asp-for="Description" class="form-control mt-2 w-75" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="mt-4 mb-2 d-inline-flex justify-content-end">
                    <input type="button" value="Save" class="btn btn-primary mx-3" onclick="savemodule(this)" />
                </div>
            </form>
            <div class="mt-4 mb-2 d-inline-flex justify-content-end">
                <input type="button" value="Cancel" class="btn btn-primary mx-3" onclick="removemodule(this.parentNode.parentNode)" />
            </div>
        </div> *@
    </div>

    <div class="mt-4 mb-2 mx-auto">
        <input type="button" value="Add New Section" class="btn btn-primary" onclick="addmodule()" />
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        let moduleCount = 1;  // To keep track of dynamically added modules

        function addmodule() {
            moduleCount++;  // Increment the module count for unique IDs

            var newModule = `
            <div class="border border-2 m-5 d-flex flex-column justify-content-between" style="background:#f7f9fa">
                <form id="addmoduleform${moduleCount}" class="newModuleForm">
                    <div class="text-danger"></div>
                    <div class="">
                        <h5 class="mt-2">Module Title</h5>
                        <input type="text" name="Title" class="form-control mt-2 w-75"
                            data-val="true"
                            data-val-required="Title is required" />
                        <span class="text-danger" data-valmsg-for="Title" data-valmsg-replace="true"></span>
                    </div>
                    <div class="mt-2">
                        <h5 class="mt-2">What will students be able to do at the end of this section?</h5>
                        <input type="text" name="Description" class="form-control mt-2 w-75"
                            data-val="true"
                            data-val-required="Description is required" />
                        <span class="text-danger" data-valmsg-for="Description" data-valmsg-replace="true"></span>
                    </div>
                    <div class="mt-4 mb-2 d-inline-flex justify-content-end">
                        <input type="button" value="Save" class="btn btn-primary mx-3" onclick="savemodule(this.parentNode.parentNode)" />
                    </div>
                </form>
                <div class="mt-4 mb-2 d-inline-flex justify-content-end">
                    <input type="button" value="Cancel" class="btn btn-primary mx-3" onclick="removemodule(this.parentNode.parentNode)" />
                </div>
            </div>`;



            var container = document.getElementById("addnewmodule");
            container.insertAdjacentHTML('beforeend', newModule);

            // Re-apply unobtrusive validation to the new form
            var newForm = container.querySelector(`#addmoduleform${moduleCount}`);
            console.log(newForm);
            $.validator.unobtrusive.parse(newForm);
        }

        function removemodule(module) {
            module.remove();
        }

        function savemodule(button) {
            var form = $(button).closest("form");  // Find the closest form element
            $.validator.unobtrusive.parse(form);  // Re-apply validation

            if (form.valid()) {
                var formdata = form.serialize();

                $.ajax({
                    url: '/Module/CreateModule',
                    type: "POST",
                    data: formdata,
                    success: function (response) {
                        form.closest('.border').remove();  // Remove the module on successful save
                    },
                    error: function (request, status, error) {
                        alert(request.responseText);
                    }
                });
            }
        }

    </script>
}
