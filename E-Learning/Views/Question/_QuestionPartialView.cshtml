@using Enities.ViweModel.Question

@model QuestionDataVM
<style>
    body {
        font-family: Arial, sans-serif;
        padding: 20px;
        background-color: #f0f0f0;
    }

    .comments-section {
        background-color: white;
        padding: 20px;
        max-width: 600px;
        margin: 0 auto;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .add-comment textarea {
        width: 100%;
        height: 60px;
        padding: 10px;
        margin-bottom: 10px;
        border-radius: 5px;
        border: 1px solid #ddd;
    }

    .add-comment button {
        padding: 10px 15px;
        background-color: #28a745;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .comment {
        margin-bottom: 20px;
        padding: 10px;
        background-color: #f9f9f9;
        border-radius: 5px;
        border: 1px solid #ddd;
    }

        .comment .actions {
            margin-top: 10px;
        }

        .comment button {
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 5px 10px;
            cursor: pointer;
        }

    .reply-box {
        margin-top: 10px;
        padding-left: 20px;
    }

</style>
<div class="comments-section">
    <h2>Questions</h2>

    <!-- Display Existing Comments -->
    <div id="comments-list">
        @foreach (var comment in Model.getQuestionVMs)
        {
            <div class="comment" id="comment-@comment.Id">
                <p>@comment.Text</p>
                <div class="actions">
                    <button onclick="showReplyBox(@comment.Id)">Reply</button>
                </div>

                <div class="reply-box" id="reply-box-@comment.Id">
                    @foreach (var reply in comment.Answers)
                    {
                        <div class="reply">
                            <p>@reply.Text</p>
                        </div>
                    }
                </div>
            </div>
        }
    </div>

    <!-- Form for Adding New Comment -->
    <div class="add-comment">
        <textarea id="new-comment" placeholder="Write a Question..."></textarea>
        <button onclick="addComment()">Ask</button>
    </div>
</div>


    <script>
        // Ensure DOM is fully loaded before running the code
        $(document).ready(function () {

            // Add Comment using AJAX
            function addComment() {
                var commentText = document.getElementById('new-comment').value;

                if (commentText.trim()) {
                    $.ajax({
                        type: "POST",
                        url: "/question/createquestion",
                        data: {
                            Text: commentText,
                            CourseId: '@Model.CourseId',
                            LessonId: x
                        },
                        success: function (response) {
                            console.log(response);

                            // Append the new comment to the comments list
                            $('#comments-list').append(`
                                        <div class="comment" id="comment-${response.Id}">
                                            <p>${response.Text}</p>
                                            <div class="actions">
                                                <button onclick="showReplyBox(${response.Id})">Reply</button>
                                            </div>
                                            <div class="reply-box" id="reply-box-${response.Id}"></div>
                                        </div>
                                    `);
                            document.getElementById('new-comment').value = ''; // Clear the input field
                        },
                        error: function (response) {
                            alert("Error: " + response.responseText);
                        }
                    });
                } else {
                    alert("Comment cannot be empty!");
                }
            }

            // Make addComment globally accessible
            window.addComment = addComment;

            // Show Reply Box Function
            window.showReplyBox = function (commentId) {
                var replyBox = document.getElementById('reply-box-' + commentId);

                if (!replyBox.querySelector('textarea')) {
                    var textarea = document.createElement('textarea');
                    textarea.placeholder = "Write a reply...";

                    var button = document.createElement('button');
                    button.textContent = 'Reply';

                    button.onclick = function () {
                        addReply(commentId, textarea.value);
                    };

                    replyBox.appendChild(textarea);
                    replyBox.appendChild(button);
                }
            };

            // Add Reply using AJAX
            function addReply(commentId, replyText) {
                if (replyText.trim()) {
                    $.ajax({
                        type: "POST",
                        url: "/Answer/CreateAnswer",
                        data: {
                            QuestionId: commentId,
                            Text: replyText,
                            CourseId: '@Model.CourseId',
                            LessonId: '@Model.LessonId'
                        },
                        success: function (response) {
                            $('#reply-box-' + commentId).append(`
                                        <div class="reply">
                                            <p>${response.Text}</p>
                                        </div>
                                    `);
                        },
                        error: function (response) {
                            alert("Error: " + response.responseText);
                        }
                    });
                } else {
                    alert("Reply cannot be empty!");
                }
            }

            // Make addReply globally accessible
            window.addReply = addReply;
        });
    </script>

